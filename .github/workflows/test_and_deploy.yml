name: Test and Deploy

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master

jobs:
  test-gesture-recognition-api:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend/recognition_api

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load Poetry cache
        id: cache-poetry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            backend/recognition_api/.venv
          key: poetry-${{ hashFiles('backend/recognition_api/poetry.lock') }}

      - name: Install dependencies with Poetry
        run: poetry install --no-interaction --no-root

      - name: Set up .env file
        run: |
          touch .env
          echo '${{ secrets.RECOGNITION_API_ENV_FILE }}' > .env

      - name: Run tests
        run: poetry run pytest tests

  deploy:
    needs: test-gesture-recognition-api
    if: github.ref == 'refs/heads/master'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Set up .env file
        run: |
          touch ./backend/recognition_api/.env
          echo '${{ secrets.RECOGNITION_API_ENV_FILE }}' > ./backend/recognition_api/.env

      - name: Copy project to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p ~/gesture_recognition"
  
          rsync -az --delete ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/gesture_recognition
          
      - name: Deploy with Docker Compose
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
            cd ~/gesture_recognition
            
            docker compose down --remove-orphans
            docker compose build --pull
            docker compose up -d --wait
          EOF
