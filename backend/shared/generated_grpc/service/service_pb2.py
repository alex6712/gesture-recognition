# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='service.proto',
  package='backend',
  syntax='proto3',
  serialized_pb=_b('\n\rservice.proto\x12\x07\x62\x61\x63kend\"/\n\x0bTextRequest\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x12\n\nmodel_name\x18\x02 \x01(\t\"K\n\x0cTextResponse\x12\x16\n\x0eprocessed_text\x18\x01 \x01(\t\x12\x12\n\nconfidence\x18\x02 \x01(\x02\x12\x0f\n\x07success\x18\x03 \x01(\x08\x32K\n\rNeuralService\x12:\n\x0bProcessText\x12\x14.backend.TextRequest\x1a\x15.backend.TextResponseb\x06proto3')
)




_TEXTREQUEST = _descriptor.Descriptor(
  name='TextRequest',
  full_name='backend.TextRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='backend.TextRequest.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='model_name', full_name='backend.TextRequest.model_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=73,
)


_TEXTRESPONSE = _descriptor.Descriptor(
  name='TextResponse',
  full_name='backend.TextResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='processed_text', full_name='backend.TextResponse.processed_text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='backend.TextResponse.confidence', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='success', full_name='backend.TextResponse.success', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=75,
  serialized_end=150,
)

DESCRIPTOR.message_types_by_name['TextRequest'] = _TEXTREQUEST
DESCRIPTOR.message_types_by_name['TextResponse'] = _TEXTRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TextRequest = _reflection.GeneratedProtocolMessageType('TextRequest', (_message.Message,), dict(
  DESCRIPTOR = _TEXTREQUEST,
  __module__ = 'service_pb2'
  # @@protoc_insertion_point(class_scope:backend.TextRequest)
  ))
_sym_db.RegisterMessage(TextRequest)

TextResponse = _reflection.GeneratedProtocolMessageType('TextResponse', (_message.Message,), dict(
  DESCRIPTOR = _TEXTRESPONSE,
  __module__ = 'service_pb2'
  # @@protoc_insertion_point(class_scope:backend.TextResponse)
  ))
_sym_db.RegisterMessage(TextResponse)



_NEURALSERVICE = _descriptor.ServiceDescriptor(
  name='NeuralService',
  full_name='backend.NeuralService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=152,
  serialized_end=227,
  methods=[
  _descriptor.MethodDescriptor(
    name='ProcessText',
    full_name='backend.NeuralService.ProcessText',
    index=0,
    containing_service=None,
    input_type=_TEXTREQUEST,
    output_type=_TEXTRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_NEURALSERVICE)

DESCRIPTOR.services_by_name['NeuralService'] = _NEURALSERVICE

# @@protoc_insertion_point(module_scope)
